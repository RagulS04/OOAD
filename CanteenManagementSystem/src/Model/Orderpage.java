/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Model;

/**
 *
 * @author Ragul S
 */
//import canteenmanagementsystem.CustomerInfo;
import canteenmanagementsystem.ItemInfo;
import Model.Payment;
import canteenmanagementsystem.CustomerInfo;
import canteenmanagementsystem.Order;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
public class Orderpage extends javax.swing.JFrame {
    
    public static double grandTotal =0;
    public static String order_details="";
    public static String un;
    /**
     * Creates new form Orderpage
     */
    public Orderpage(String n) {
       // Searchbox.setText(String.valueOf(CustomerInfo.cus_array.get(0).getBal_amount()));
       
       un = n;
       setBounds(0,100,0,0);
        initComponents();
        Userbox.setText(n);
        DefaultTableModel dtm = (DefaultTableModel) Menutable.getModel();
        dtm.setRowCount(0);
        
        for(ItemInfo it: ItemInfo.item_array){
            dtm.addRow(new Object[]{
                it.getName(),it.getPrice()
            });
        }
        double ta=0;
        DefaultTableModel ctm = (DefaultTableModel) Carttable.getModel();
        ctm.setRowCount(0);
        
        for(Order it: CustomerInfo.order){
            ctm.addRow(new Object[]{
                it.getName(),it.getQ(),it.getP()
            });
            ta+=it.getP();
        }
        Totalbox.setText(String.valueOf(ta));
        /*dtm.addRow(new Object[]{
            "pongal",12
        });*/
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Menutable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Carttable = new javax.swing.JTable();
        Searchbox = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Refresh = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Totalbox = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        Userbox = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(760, 632));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Menutable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Menutable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenutableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Menutable);
        if (Menutable.getColumnModel().getColumnCount() > 0) {
            Menutable.getColumnModel().getColumn(1).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 105, 389, 363));

        jButton1.setBackground(new java.awt.Color(153, 153, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jButton1.setText("Proceed to pay");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 430, -1, -1));

        Carttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Carttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CarttableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(Carttable);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 60, 303, 352));
        getContentPane().add(Searchbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(136, 18, 256, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Enter item name");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 17, -1, 30));

        Refresh.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Refresh.setText("Search");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });
        getContentPane().add(Refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, 92, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel2.setText("Total");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 430, 47, -1));

        Totalbox.setText("0");
        Totalbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalboxActionPerformed(evt);
            }
        });
        getContentPane().add(Totalbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 430, 80, 30));

        jButton3.setBackground(new java.awt.Color(0, 102, 255));
        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Logout");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 255, 255), new java.awt.Color(51, 204, 255), null, null));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, 90, 30));

        Userbox.setBackground(new java.awt.Color(255, 255, 255));
        Userbox.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        getContentPane().add(Userbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, 90, 40));

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 102, 102));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/clear.png"))); // NOI18N
        jButton5.setText("Clear");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public int Search(String itemname){
        TableModel model = Carttable.getModel();
        int rowcount = model.getRowCount();
        if(rowcount==0) return -1;
        
        for(int i=0;i<rowcount;i++){
            if(itemname.equals(model.getValueAt(i, 0))){
                return i;
            }
        }
        
        return -1;
    }
    private void MenutableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenutableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) Carttable.getModel();
        
        int index = Menutable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) Menutable.getModel(); 
        
        String itemname = model.getValueAt(index, 0).toString();
        String price = model.getValueAt(index,1).toString();
        int foundIndex = Search(itemname);
        //int foundIndex=-1;
        
        grandTotal = Double.parseDouble(Totalbox.getText());
        
        if( foundIndex != -1){
            double pri = Double.parseDouble(dtm.getValueAt(foundIndex, 2).toString());
            int qt =Integer.parseInt(dtm.getValueAt(foundIndex, 1).toString());
            pri += pri/qt;
            qt++;
            
            grandTotal += pri/qt;
            CustomerInfo.order.get(foundIndex).setP(pri);
            CustomerInfo.order.get(foundIndex).setQ(qt);
            dtm.setValueAt(pri, foundIndex, 2);
            dtm.setValueAt(qt,foundIndex,1);
            
        }
        else
        {
            dtm.addRow(new Object[]{
                itemname,1,Double.valueOf(price)
            });
            CustomerInfo.order.add(new Order(itemname,1,Double.valueOf(price)));
            grandTotal += Double.valueOf(price);
        }
        
        Totalbox.setText(String.valueOf(grandTotal));
    }//GEN-LAST:event_MenutableMouseClicked

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        // TODO add your handling code here:
        String name = Searchbox.getText();
        int flag = 0;
        //JOptionPane.showMessageDialog(null,name+" Not Found !"+ItemInfo.item_array.size());
        DefaultTableModel dtm = (DefaultTableModel) Menutable.getModel();
        dtm.setRowCount(0);
        
        for(ItemInfo it: ItemInfo.item_array){
            if(it.getName().equals(name)){
                dtm.addRow(new Object[]{
                it.getName(),it.getPrice(),it.getAvailable_quantity()
            });
                flag = 1;
            }
        }
        
        if(flag == 0){
            JOptionPane.showMessageDialog(null,name+" Not Found !");
            Searchbox.setText("");
            for(ItemInfo it: ItemInfo.item_array){
            dtm.addRow(new Object[]{
                it.getName(),it.getPrice()
            });
        }
        }
    }//GEN-LAST:event_RefreshActionPerformed

    private void TotalboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TotalboxActionPerformed

    private void CarttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CarttableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) Carttable.getModel();
        
        grandTotal = Double.parseDouble(Totalbox.getText());
        
        int index = Carttable.getSelectedRow();
        
        double pri = Double.parseDouble(dtm.getValueAt(index, 2).toString());
        int qt =Integer.parseInt(dtm.getValueAt(index, 1).toString());
        
        pri -= pri/qt;
        qt--;
        
        grandTotal -= pri/qt;
        
        if(qt != 0){
            dtm.setValueAt(pri, index, 2);
            dtm.setValueAt(qt,index,1);
            CustomerInfo.order.get(index).setP(pri);
            CustomerInfo.order.get(index).setQ(qt);
        }
        else{
            dtm.removeRow(index);
            CustomerInfo.order.remove(index);
        }
        if(dtm.getRowCount() == 0) Totalbox.setText("0");
        else Totalbox.setText(String.valueOf(grandTotal));
    }//GEN-LAST:event_CarttableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel dtm = (DefaultTableModel) Carttable.getModel();
        
        for(int i=0;i<dtm.getRowCount();i++)
        {
            String itemname = dtm.getValueAt(i, 0).toString();
            String quantity = dtm.getValueAt(i,1).toString();
            order_details+=itemname+" x "+quantity+"\n";
        }
        new Payment().setVisible(true);
       // JOptionPane.showMessageDialog(null,order_details);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new Login().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Searchbox.setText("");
        DefaultTableModel dtm = (DefaultTableModel) Menutable.getModel();
        dtm.setRowCount(0);
        for(ItemInfo it: ItemInfo.item_array){
            dtm.addRow(new Object[]{
                it.getName(),it.getPrice()
            });
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Orderpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Orderpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Orderpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Orderpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Orderpage("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Carttable;
    private javax.swing.JTable Menutable;
    private javax.swing.JButton Refresh;
    private javax.swing.JTextField Searchbox;
    private javax.swing.JTextField Totalbox;
    private javax.swing.JLabel Userbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
